class Solution {
public:
    string getHint(string secret, string guess) {
        vector<int> v1(10, 0), v2(10, 0);
		int A = 0, B = 0;
		for(int i = 0; i < secret.size(); i++){
			if(secret[i] == guess[i]){
				A++;
			}
			else{
				v1[secret[i]-'0']++;
				v2[guess[i]-'0']++;
			}
		}
		for(int i = 0; i < 10; i++) B += min(v1[i], v2[i]);
		
		return to_string(A) + "A" + to_string(B) + "B";
    }
};


//////////////////////////////////////////
// same idea, use lambda expression to try to find B(just for fun)
class Solution {
public:
    string getHint(string secret, string guess) {
        vector<int> v1(10, 0), v2(10, 0);
		int A = 0, B = 0;
		for(int i = 0; i < secret.size(); i++){
			if(secret[i] == guess[i]){
				A++;
			}
			else{
				v1[secret[i]-'0']++;
				v2[guess[i]-'0']++;
			}
		}
		
		int idx2 = 0;
		for_each(v1.begin(), v1.end(), [&](int a){
			B += min(a, v2[idx2]);
			idx2++;
			return;
		});
		
		return to_string(A) + "A" + to_string(B) + "B";
    }
};
