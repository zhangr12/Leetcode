// topological sorting
class Solution {
public:
    vector<int> findOrder(int numCourses, vector<pair<int, int>>& prerequisites) {
        vector<vector<int>> graph(numCourses);
        vector<int> indegree(numCourses);
        
        for(auto p:prerequisites){
            graph[p.second].push_back(p.first);
            indegree[p.first]++;
        }
        
        queue<int> q;
        
        for(int i = 0; i < numCourses; i++){
            if(indegree[i] == 0) q.push(i);
        }
        
        vector<int> finished;
        while(!q.empty()){
            int crt = q.front();
            q.pop();
            finished.push_back(crt);
            for(auto u:graph[crt]){
                indegree[u]--;
                if(indegree[u] == 0){
                    q.push(u);
                }
            }
        }
        if(finished.size() == numCourses) return finished;
        return {};
    }
};
