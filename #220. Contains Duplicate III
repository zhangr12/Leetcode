class Solution {
public:
    // idea:
    // use set the keep element in the window with size k+1
    // whenever a new element comes, first check whether we have existing elements in s such that the absolute difference between these two element is at most k
    // if exist, return true
    // if not, insert current element into s
    // at the end, return false
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        set<long int> s;
        for(int i = 0; i < nums.size(); i++){
            // keep window size k+1
            if(i > k) s.erase(nums[i-k-1]);
            // find nearest element
            auto pos = s.lower_bound(nums[i]);
            if(pos != s.end() && abs(*pos - nums[i]) <= t) return true;
            if(pos != s.begin() && abs(*(--pos) - nums[i]) <= t) return true;
            s.insert(nums[i]);
        }
        return false;
    }
};
