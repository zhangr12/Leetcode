class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        // dp with size amount
        // initialization: dp[i] = INT_MAX, dp[coins[i]] = 1;
        // transition: dp[i] = min(dp[i], dp[i-coint[j]] + 1) if dp[i-coint[j] + 1] != INT_MAX
        vector<int> dp(amount + 1, INT_MAX);
        // initialization
        dp[0] = 0;
        for(int i = 0; i < coins.size(); i++){
            if(coins[i] <= amount) dp[coins[i]] = 1;
        }
        // transition
        for(int i = 1; i < amount + 1; i++){
            for(int j = 0; j < coins.size(); j++){
                if(coins[j] > i) continue;
                if(dp[i-coins[j]] == INT_MAX) continue;
                dp[i] = min(dp[i], dp[i-coins[j]] + 1);
            }
        }
        return dp[amount] == INT_MAX ? -1 : dp[amount];
    }
};
