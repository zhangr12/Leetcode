class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        helper(s, {}, res);
        return res;
    }
    
    void helper(string s, vector<string> temp, vector<vector<string>> &res){
        if(s.size() == 0){
            res.push_back(temp);
            return;
        }
        
        for(int i = 1; i <= s.size(); i++){
            if(isPalindrome(s.substr(0, i))){
                temp.push_back(s.substr(0, i));
                helper(s.substr(i, s.size() - i), temp, res);
                temp.pop_back();
            }
        }
        return;
    }
    
    bool isPalindrome(string s){
        int i = 0, j = s.size()-1;
        while(i < j){
            if(s[i] != s[j]) return false;
            i++;
            j--;
        }
        return true;
    }
    
};
