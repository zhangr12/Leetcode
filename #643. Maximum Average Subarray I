class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        double res = INT_MIN, temp = 0, d = k;
        for(int i = 0; i < k; i++) temp += nums[i];
        temp /= k;
        res = max(res, temp);
        for(int i = k; i < nums.size(); i++){
            temp -= nums[i-k]/d;
            temp += nums[i]/d;
            res = max(temp, res);
        }
        return res;
    }
};




/////////////////////////////////////
// similar sliding window idea, the difference is we move the divide calculation to the end so that we only need to do it once
class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        double res = INT_MIN, temp = 0;
        for(int i = 0; i < k; i++) temp += nums[i];
        res = max(res, temp);
        for(int i = k; i < nums.size(); i++){
            temp -= nums[i-k];
            temp += nums[i];
            res = max(temp, res);
        }
        return res/k;
    }
};
