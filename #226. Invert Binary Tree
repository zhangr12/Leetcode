/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root == NULL) return root;
        stack<TreeNode*> nodes;
        TreeNode* crt_node;
        TreeNode* temp;
        nodes.push(root);
        while (!nodes.empty()){
            crt_node = nodes.top();
            nodes.pop();
            temp = crt_node->left;
            crt_node->left = crt_node->right;
            crt_node->right = temp;
            if(crt_node->left != NULL) nodes.push(crt_node->left);
            if(crt_node->right != NULL) nodes.push(crt_node->right);
        }
        return root;
    }
};
