/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* pH = new ListNode(0);
        pH->next = head;
        ListNode *prev = pH, *crt = pH->next, *nxt;
        while(crt){
            nxt = crt->next;
            if(nxt == nullptr) break;
            if(nxt->val != crt->val){
                // only update prev when we know crt is a unique node
                prev = crt;
                crt = nxt;
            }
            else{
                while(nxt){
                    if(nxt->val == crt->val){
                        nxt = nxt->next;
                    }
                    else{
                        break;
                    }
                }
                // now, either nxt == nullptr or nxt->val != crt->val
                // we know that we can abandon all the node between crt and nxt
                prev->next = nxt;
                crt = nxt;
            }
        }
        return pH->next;
    }
};
