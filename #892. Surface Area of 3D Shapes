class Solution {
public:
    int surfaceArea(vector<vector<int>>& grid) {
        if(grid.size() == 0) return 0;
        int res = 0, m = grid.size(), n = grid[0].size();
        for(int i = 0; i < m; i++){
            // left-right
            res += grid[i][0];
            for(int j = 1; j < n; j++) res += max(0, grid[i][j] - grid[i][j-1]);
            // right-left
            res += grid[i][n-1];
            for(int j = n-2; j >= 0; j--) res += max(0, grid[i][j] - grid[i][j+1]);
        }
        
        for(int j = 0; j < n; j++){
            // up-down
            res += grid[0][j];
            for(int i = 1; i < m; i++) res += max(0, grid[i][j] - grid[i-1][j]);
            // down-up
            res += grid[m-1][j];
            for(int i = m-2; i >= 0; i--) res += max(0, grid[i][j] - grid[i+1][j]);
        }
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] != 0) res += 2;
            }
        }
        return res;
    }
};
