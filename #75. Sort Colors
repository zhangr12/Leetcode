// https://leetcode.com/problems/sort-colors/discuss/26474/Sharing-C++-solution-with-Good-Explanation
// this is a Dutch national flag problem
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int low = 0, mid = 0, high = nums.size()-1;
        
        while(mid <= high){
            if(nums[mid] == 0){
                swap(nums[low], nums[mid]);
                low++;
                mid++;
            }
            else if(nums[mid] == 1){
                mid++;
            }
            else{
                swap(nums[mid], nums[high]);
                high--;
            }
        }
    }
};


//////////////////////////////
// Naive two pass solution
class Solution {
public:
    void sortColors(vector<int>& nums) {
        vector<int> count(3, 0);
        for(int num:nums) count[num]++;
        int crtIdx = 0, crtColor = 0;
        while(crtIdx < nums.size()){
            while(count[crtColor] == 0) crtColor++;
            nums[crtIdx] = crtColor;
            crtIdx++;
            count[crtColor]--;
        }
    }
};
