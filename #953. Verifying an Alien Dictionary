class Solution {
public:
    // rewrite word in words based on the string "order"
    bool isAlienSorted(vector<string>& words, string order) {
        unordered_map<char, char> m;
        for(int i = 0; i < 26; ++i) m[order[i]] = char('a'+i);
        
        for(int j = 0; j < words.size(); ++j){
            for(int i = 0; i < words[j].size(); ++i){
                words[j][i] = m[words[j][i]];
            }
        }
        for(int i = 1; i < words.size(); ++i){
            //cout << words[i-1] << words[i] << endl;
            if(!w1SmallerThanW2(words[i-1], words[i])) return false;
        }
        return true;
    }
    
    bool w1SmallerThanW2(string &w1, string &w2){
        int i = 0;
        while(i < w1.size() && i < w2.size()){
            if(w1[i] > w2[i]) return false;
            if(w1[i] < w2[i]) return true;
            ++i;
        }
        if(i < w1.size()) return false;
        return true;
    }
};
