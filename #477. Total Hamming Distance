// detail explain
// https://leetcode.com/problems/total-hamming-distance/discuss/96243/Share-my-O(n)-C++-bitwise-solution-with-thinking-process-and-explanation
class Solution {
public:
    int totalHammingDistance(vector<int>& nums) {
        int res = 0, count_one = 0, total_zero = 0, n = nums.size();
        while(true){
            count_one = 0;
            total_zero = 0;
            for(int i = 0; i < n; i++){
                if(nums[i] == 0) total_zero++;
                if(nums[i]%2 != 0) count_one++;
                nums[i] = nums[i] >> 1;
            }
            res += count_one*(n-count_one);
            if(total_zero == n) return res;
        }
    }
};
