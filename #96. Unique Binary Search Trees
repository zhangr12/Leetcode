class Solution {
public:
    int numTrees(int n) {
        // G(n): the number of unique BST for a sequence of length n.
        // G(n) = G(0) * G(n-1) + G(1) * G(n-2) + â€¦ + G(n-1) * G(0)
        // explain: consider root first, there are n elements that can be the root
        // if we choose the jth element to be the root, then the possible structures for left subtree is G[j-1]
        // the possible structures for the right subtree is G[i-j]
        // the possible structures if we choose jth element as root is G[j-1]*G[i-j]
        vector<int> G(n+1, 0);
        G[0] = 1;
        G[1] = 1;
        for(int i = 2; i < n+1; i++){
            for(int j = 1; j <= i; j++){
                G[i] += G[j-1]*G[i-j];
            }
        }
        return G[n];
    }
};
