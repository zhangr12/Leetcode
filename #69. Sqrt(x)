// Binary search
class Solution {
public:
    int mySqrt(int x) {
        if(x == 0) return 0;
        long int low = 0, high = x, mid;
        while(low <= high){
            mid = low + (high-low)/2;
            if(mid*mid > x){
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        return low - 1;
    }
};


//////////////////////////////////
// Binary search: Newton's Method
class Solution {
public:
    int mySqrt(int x) {
        // n^2 - x
        // 2n
        double n = 1, m;
        while(true){
            m = n - (n*n-x)/(2*n);
            if(abs(m-n)<0.0000001) break;
            n = m;
        }
        return n;
    }
};
