/*
// Definition for a Node.
class Node {
public:
    int val = NULL;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> res;
        if(root == NULL) return res;
        vector<Node*> children;
        queue<Node*> q;
        Node* node;
        q.push(root);
        int crt_level;
        while(!q.empty()){
            crt_level = q.size();
            vector<int> temp_row;
            for(int i = 0; i < crt_level; i++){
                node = q.front();
                q.pop();
                children = node->children;
                temp_row.push_back(node->val);
                for(int j = 0; j < children.size(); j++) q.push(children[j]);
            }
            res.push_back(temp_row);
        }
        return res;
    }
};
