class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_set<int> s;
        for(size_t i = 0; i < nums.size(); ++i){
            if(i > k) s.erase(nums[i-k-1]);
            if(s.count(nums[i])) return true;
            s.insert(nums[i]);
        }
        return false;
    }
};


/////////////////////////////
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map<int, int> m;
        for(int i = 0; i < nums.size(); i++){
            if(m.find(nums[i]) == m.end()){
                m[nums[i]] = i;
            }
            else{
                if(i - m[nums[i]] > k){
                    m[nums[i]] = i;
                }
                else{
                    return true;
                }
                
            }
        }
        return false;
    }
};
