// greedy algorithm
// always choose the valid one which has smallest right value
class Solution {
public:
    int findLongestChain(vector<vector<int>>& pairs) {
        // sort the pairs first based on its second element in increasing order
        sort(pairs.begin(), pairs.end(), compare);
        // for(auto pair:pairs) cout << pair[0] << " " << pair[1] << endl;
        int res = 1, r = pairs[0][1];
        for(auto p:pairs){
            // check if current pair is valid
            if(r >= p[0]) continue;
            // if it is, record its right value
            r = p[1];
            res++;
        }
        return res;
    }
    
    static bool compare(const vector<int> &v1, vector<int> &v2){
        return v1[1] < v2[1];
    }
};
