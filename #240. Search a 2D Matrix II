// idea: start at the top right corner of the matrix
// if current position is less than target, then target cannot be in current row, since the row is sorted
// if current position is greater than target, then target cannot be in current column, since the column is sorted
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.size() == 0) return false;
        int m = matrix.size(), n = matrix[0].size();
        int row = 0, col = n-1;
        while(row < m && col >= 0){
            if(matrix[row][col] == target){
                return true;
            }
            while(row < m && col >= 0 && matrix[row][col] < target) row++;
            while(row < m && col >= 0 && matrix[row][col] > target) col--;
            //cout << row << " " << col << endl;
        }
        return false;
    }
};
