class RLEIterator {
public:
    RLEIterator(vector<int> A) {
        pA = A;
        crt_pos = 0;
        len_A = A.size();
    }
    
    int next(int n) {
        int res;
        while(n){
            // find next exist element
            while(crt_pos < len_A && pA[crt_pos] == 0){
                crt_pos += 2;
            }
            if(crt_pos == len_A) return -1;
            if(n > pA[crt_pos]){
                n -= pA[crt_pos];
                pA[crt_pos] = 0;
            }
            else{
                pA[crt_pos] -= n;
                res = pA[crt_pos+1];
                n = 0;
            }
            //cout << crt_pos << endl;
        }
        return crt_pos == len_A ? -1 : res;
    }
private:
    vector<int> pA;
    int crt_pos, len_A;
};

/**
 * Your RLEIterator object will be instantiated and called as such:
 * RLEIterator obj = new RLEIterator(A);
 * int param_1 = obj.next(n);
 */
