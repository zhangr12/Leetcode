/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        vector<int> res;
        if(root == NULL) return res;
        stack<TreeNode*> s;
        s.push(root);
        TreeNode* node;
        int max_num = 0;
        unordered_map<int, int> m;
        while(!s.empty()){
            node = s.top();
            s.pop();
            m[node->val]++;
            max_num = max(max_num, m[node->val]);
            if(node->left!=NULL) s.push(node->left);
            if(node->right!=NULL) s.push(node->right);
        }
        unordered_map<int, int>::iterator it;
        for(it = m.begin(); it!=m.end(); it++){
            if (it->second == max_num) res.push_back(it->first);
        }
        return res;
    }
};
