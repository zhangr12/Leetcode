class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        if(target <= nums[0]) return 0;
        if(target > nums[nums.size() - 1]) return nums.size();
        for(int i = 1; i < nums.size(); i++){
            if(nums[i-1] < target && target <= nums[i]) return i;
        }
    }
};


///////////////////////////////
// binar search
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low = 0, high = nums.size() - 1, mid;
        while(low <= high){
            mid = low + (high-low)/2;
            if(target <= nums[mid]){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }
};
