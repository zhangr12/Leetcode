// method use queue
class RecentCounter {
public:
    RecentCounter() {
        
    }
    
    int ping(int t) {
        while(!q.empty() && q.front() < t-3000) q.pop();
        q.push(t);
        return q.size();
    }
private:
    queue<int> q;
};

/**
 * Your RecentCounter object will be instantiated and called as such:
 * RecentCounter* obj = new RecentCounter();
 * int param_1 = obj->ping(t);
 */
 
 
 ///////////////////////////////
 // method use deque
 class RecentCounter {
public:
    RecentCounter() {
        
    }
    
    int ping(int t) {
        dq.push_front(t);
        while(!dq.empty() && dq.back() < t-3000) dq.pop_back();
        return dq.size();
    }
private:
    deque<int> dq;
};
