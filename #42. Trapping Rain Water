class Solution {
public:
    int trap(vector<int>& height) {
        // idea: the max amount of water can hold in one unit is depends on the minimum value of its left and right "wall" minus its height
        if(height.size() == 0) return 0;
        
        int n = height.size();
        
        vector<int> leftMax(n, 0), rightMax(n, 0);
        
        leftMax[0] = height[0];
        for(int i = 1; i < n; i++) leftMax[i] = max(leftMax[i-1], height[i]);
        rightMax[n-1] = height[n-1];
        for(int i = n-2; i >= 0; i--) rightMax[i] = max(rightMax[i+1], height[i]);
        int res = 0;
        for(int i = 0; i < n; i++) res += min(leftMax[i], rightMax[i]) - height[i];
        return res;
    }
};
