class Solution {
public:
    int compareVersion(string version1, string version2) {
        stringstream ss1(version1), ss2(version2);
        
        while(ss1 && ss2){
            string temp1, temp2;
            getline(ss1, temp1, '.');
            getline(ss2, temp2, '.');
            //cout << temp1 << endl;
            //cout << temp2 << endl;
            int temp = compare(temp1, temp2);
            if(temp != 0) return temp;
        }
        if(ss1){
            while(ss1){
                string temp1;
                getline(ss1, temp1, '.');
                if(!allZero(temp1)) return 1;
            }
        }
        if(ss2){
            while(ss2){
                string temp2;
                getline(ss2, temp2, '.');
                if(!allZero(temp2)) return -1;
            }
        }
        return 0;
    }
    
    // return -1 if first one is bigger
    // return 1 if second one is bigger
    // return 0 if they are equal
    int compare(string &s1, string &s2){
        int i = 0, j = 0;
        while(s1[i] == '0') i++;
        while(s2[j] == '0') j++;
        if(s1.size()-i != s2.size()-j){
            if(s1.size()-i > s2.size()-j) return 1;
            return -1;
        }
        while(i < s1.size() && j < s2.size()){
            if(s1[i] == s2[j]){
                i++;
                j++;
                continue;
            }
            if(s1[i] > s2[j]) return 1;
            return -1;
        }
        return 0;
    }
    
    bool allZero(string &s){
        for(int i = 0; i < s.size(); i++){
            if(s[i] != '0') return false;
        }
        return true;
    }
};
