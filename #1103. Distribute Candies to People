class Solution {
public:
    vector<int> distributeCandies(int candies, int num_people) {
        // (m+1)*m/2 = candies
        // m^2 + m - 2*candies = 0
        // m = (-1 + sqrt(1 + 8*candies))/2
        // we are going to move m steps
        // m/num_people rounds + extra m%num_people steps
        // for k = m/num_people rounds: ith people get (i+1+k*num_people+i+1)*k/2 candies
        // for extra j = m%num_people steps: the first j person get (k+1)*num_people+j+1 candies
        vector<int> res(num_people, 0);
        int m = (-1 + sqrt(1 + (long int)8*candies))/2;
        int k = m/num_people, j = m%num_people;
        int residual = candies - (m+1)*m/2;
        for(int i = 0; i < num_people; ++i){
            res[i] = (i+1+(k-1)*num_people+i+1)*k/2;
            if(i < j) res[i] += k*num_people + i + 1;
            if(i == m%num_people) res[i] += residual;
        }
        return res;
    }
};
