// similar with the problem which wants to move all non-zero elements to the front of the vector
// use i to traverse the vector, use j to record the location of next duplicate-and-ready-to-replace element
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size() <= 1) return nums.size();
        int i = 1, j = 1, crt = nums[0];
        for(i; i<nums.size(); i++){
            if (nums[i] == crt){
                continue;
            }
            else{
                nums[j] = nums[i];
                crt = nums[i];
                j++;
            }
        }
        return j;
    }
};
