// BFS
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<int> temp;
        vector<vector<int>> res;
        helper(res, temp, nums);
        return res;
    }
    
    
    void helper(vector<vector<int>>& res, vector<int>& crt_res, vector<int>& nums){
        if(nums.size() == 0){
            res.push_back(crt_res);
            return;
        }
        for(int i = 0; i < nums.size(); i++){
            vector<int> temp_nums = nums;
            vector<int> temp_crt_res = crt_res;
            temp_crt_res.push_back(nums[i]);
            temp_nums.erase(temp_nums.begin() + i);
            helper(res, temp_crt_res, temp_nums);
        }
    }
};
