class Solution {
public:
    vector<int> constructArray(int n, int k) {
        // 1 2 3 4 5 6 7
        // 1 7 2 6 3 5 4
        // 6 5 4 3 2 1
        // When k = n-1, a valid construction is [1, n, 2, n-1, 3, n-2, ....]. 
        // One way to see this is, we need to have a difference of n-1, 
        // which means we need 1 and n adjacent; then, we need a difference of n-2, etc.

        // This leads to the following idea: we will put [1, 2, ...., n-k-1] first, 
        // and then we have N = k+1 adjacent numbers left, of which we want k different differences. 
        // This is just the answer above translated by n-k-1: we'll put [n-k, n, n-k+1, n-1, ....] after.
        vector<int> res(n, 0);
        for(int i =0; i < k+1; i++){
            if(i%2 == 0){
                res[i] = i/2 + 1;
            }
            else{
                res[i] = k + 1 - i/2;
            }
        }
        for(int i = k+1; i < n; i++) res[i] = i+1;
        return res;
    }
};
