/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    // idea: inorder traversal
    int rangeSumBST(TreeNode* root, int L, int R) {
        if(!root) return 0;
        int res = 0, l = 0, r = 0;
        // since it is BST, so if root->val is already less than L, we do not need to traverse left subtree
        if(root->val > L) l = rangeSumBST(root->left, L, R);
        if(root->val >= L && root->val <= R) res = root->val;
        // if root->val is already greater than R, we do not need to traverse right subtree
        if(root->val < R) r = rangeSumBST(root->right, L, R);
        return res + l + r;
    }
};
