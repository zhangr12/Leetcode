//visit each element once
class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        //check first row
        for(int i = 0; i < n - 1; i++){
            int j = 0;
            int temp_i = i;
            int temp = matrix[j][i];
            while (i+1 < n && j+1 < m){
                if (temp != matrix[j+1][i+1]) return false;
                i++;
                j++;
            }
            i = temp_i;
        }
        //check first column
        for (int i = 1; i < m - 1; i++){
            int j = 0;
            int temp_i = i;
            int temp = matrix[i][j];
            while (i+1 < m && j+1 < n){
                if (temp != matrix[i+1][j+1]) return false;
                i++;
                j++;
            }
            i = temp_i;
        }
        return true;
    }
};

////////////////////////////////////////
//visit each element twice
class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size(), n = matrix[0].size();
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++)
                if (matrix[i][j] != matrix[i - 1][j - 1])
                    return false;
        return true;
    }
};
